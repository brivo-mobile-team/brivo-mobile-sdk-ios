// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios12.1-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name BrivoLocalAuthentication
import BrivoCore
import Foundation
import LocalAuthentication
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers @objc public class BrivoSDKLocalAuthentication : ObjectiveC.NSObject, BrivoLocalAuthentication.IBrivoSDKLocalAuthentication {
  @objc public static let instance: BrivoLocalAuthentication.BrivoSDKLocalAuthentication
  @objc public func canAuthenticate(onSucces: BrivoLocalAuthentication.OnLocalAuthenticationSuccessType?, onFailure: BrivoLocalAuthentication.OnFailureType?)
  @objc public func authenticate(onSucces: BrivoLocalAuthentication.OnLocalAuthenticationSuccessType?, onFailure: BrivoLocalAuthentication.OnFailureType?)
  @objc public func cancelAuthentication()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class BrivoLocalAuthenticationErrors : ObjectiveC.NSObject {
  @objc public static let unknownError: BrivoCore.BrivoError
  @objc public static let localHardwareUnavailableError: BrivoCore.BrivoError
  @objc public static let timeOutError: BrivoCore.BrivoError
  @objc public static let localHardwareNotPresentError: BrivoCore.BrivoError
  @objc public static let notEnroledError: BrivoCore.BrivoError
  @objc public static let contextNotSetError: BrivoCore.BrivoError
  @objc public static let applicationCanceledError: BrivoCore.BrivoError
  @objc public static let notInteractiveError: BrivoCore.BrivoError
  @objc public static let biometryLockoutError: BrivoCore.BrivoError
  @objc override dynamic public init()
  @objc deinit
}
public typealias OnLocalAuthenticationSuccessType = () -> Swift.Void
public typealias OnFailureType = (BrivoCore.BrivoError) -> Swift.Void
@objc public protocol IBrivoSDKLocalAuthentication {
  @objc func cancelAuthentication()
  @objc func canAuthenticate(onSucces: BrivoLocalAuthentication.OnLocalAuthenticationSuccessType?, onFailure: BrivoLocalAuthentication.OnFailureType?)
  @objc func authenticate(onSucces: BrivoLocalAuthentication.OnLocalAuthenticationSuccessType?, onFailure: BrivoLocalAuthentication.OnFailureType?)
}
